# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "gh-pages" branch


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set Up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Checkout
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v3
        with:
          repository: newrelic/newrelic-java-agent
          ref: main
#          token:
          path: newrelic-java-agent
#          lfs: true

      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: pwd
#
#      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          ls
#          echo Add other actions to build,
#          echo test, and deploy your project.

      - name: set gradle.properties
        run: |
          cd ${GITHUB_WORKSPACE}/newrelic-java-agent
          sed -i -e "s|jdk8=8|jdk8=${JAVA_HOME_8_x64}|
          s|jdk11=11|jdk11=${JAVA_HOME_11_x64}|
          s|jdk17=17|jdk17=${JAVA_HOME_17_x64}|" gradle.properties.gha
          mv gradle.properties.gha gradle.properties

      - name: Setup Gradle options
        run: echo "GRADLE_OPTIONS=-Porg.gradle.java.installations.auto-detect=false -Porg.gradle.java.installations.fromEnv=JAVA_HOME_11_x64,JAVA_HOME_8_x64" >> $GITHUB_ENV

      - name: Create Javadocs
        run: |
          cd ${GITHUB_WORKSPACE}/newrelic-java-agent/newrelic-api 
          ../gradlew javadoc -Prelease=true -PagentVersion=8.0.0
          ls build/docs/javadoc
          

#      - name: Zip Javadoc

#      - name: upload artifact
          




